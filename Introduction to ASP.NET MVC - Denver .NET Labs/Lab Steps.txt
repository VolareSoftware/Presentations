Lab Steps
----------

- Lab 1 - Hello World MVC using different methods
	- 1a) Show references
	- 1b) Run as-is to show default look
	- 2) Change values in Home View to display "Hello World"
	- 3) Refactor to use ViewData["Message"] for value in view from Controller
	- Discussion - what is ViewData?
	- 4a) Refactor to use new Home Model for value in view
	- 4b) Create HomeViewModel
	- 4c) Update controller to pass HomeViewModel to View
	- 4d) Update view to reference  HomeViewModel
	- 4e) Update view to display HomeViewModel data
	- Discussion - 3 sources for UI data - View, Controller, Model


- Lab 2 - Building a contact form
	- Discussion - what are we trying to do with model and forms
	- 1) Set up ContactViewModel
	- 2) Set up ContactController actions
	- Discussion - FormCollection as action parameter
	- 3) Set up view with HtmlHelpers
	- Discussion - HtmlHelpers in the view
	- 4a) Set break point in controller action
	- 4b) Run with debugger to see if form works
	- Discussion - routing to this page, show that Index is optional
	- 6a) Add Success view to show first name 
	- Discussion - we need to pass this model into this view so we can see it
	- 6b) Refactor Success controller Action to pass in model
	- Discussion - passing FormCollection versus passing your Model
	- 7) Refactor Index post action to use ContactViewModel
	- 8) Set breakpoint to show model is updated automatically from form values
		

- Lab 3 - Refactor contact form to use model validation
	- Dicussion - what are the components required to validate ContactViewModel?
	- 1) Add validation summary to view
	- 2) Add validation messages to view
	- 3a) Show reference to System.ComponentModel.DataAnnotations 
	- 3b) Show reference to Microsoft.Web.Mvc.DataAnnotations
	- 4) Add validation attributes to ContactViewModel
	- 6) Add DataAnnotations Model Binder to Global.asax.cs
	- Discussion - What is a ModelBinder?  Why would you change it?
	- 7) Add code to controller to reject invalid models
	- 8) Run and test validation
	- Discussion - Notice default validation styling and CSS